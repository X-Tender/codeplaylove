// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TitleSegment renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TitleSegment
    color="#ff000"
    type="code"
  >
    CODE
  </TitleSegment>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <MaskedSVG
        color="#ff000"
        text="CODE"
        type="code"
      />,
      "className": "title__text title__text--code",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "color": "#ff000",
        "text": "CODE",
        "type": "code",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <MaskedSVG
          color="#ff000"
          text="CODE"
          type="code"
        />,
        "className": "title__text title__text--code",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "color": "#ff000",
          "text": "CODE",
          "type": "code",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
